import streamlit as st
import pickle
import numpy as np
import pandas as pd

# Charger le mod√®le
with open('malware_model.pkl', 'rb') as file:
    model = pickle.load(file)

# Titre de l'application
st.title('üîç D√©tection de Programmes Malveillants')

# Description
st.write("""
Cette application utilise un mod√®le d'apprentissage automatique pour pr√©dire si un fichier est **l√©gitime (1)** ou **malveillant (0)** en fonction de ses caract√©ristiques.
""")

# Entr√©e des caract√©ristiques
st.sidebar.header('üõ†Ô∏è Param√®tres des Caract√©ristiques')

def user_input_features():
    AddressOfEntryPoint = st.sidebar.number_input('AddressOfEntryPoint', min_value=0, max_value=1000000, value=10407)
    MajorLinkerVersion = st.sidebar.number_input('MajorLinkerVersion', min_value=0, max_value=255, value=9)
    MajorImageVersion = st.sidebar.number_input('MajorImageVersion', min_value=0, max_value=1000, value=6)
    MajorOperatingSystemVersion = st.sidebar.number_input('MajorOperatingSystemVersion', min_value=0, max_value=1000, value=6)
    DllCharacteristics = st.sidebar.number_input('DllCharacteristics', min_value=0, max_value=65535, value=33088)
    SizeOfStackReserve = st.sidebar.number_input('SizeOfStackReserve', min_value=0, max_value=33554432, value=262144)
    NumberOfSections = st.sidebar.number_input('NumberOfSections', min_value=1, max_value=40, value=4)
    ResourceSize = st.sidebar.number_input('ResourceSize', min_value=0, max_value=4294967295, value=952)
    
    data = {
        'AddressOfEntryPoint': AddressOfEntryPoint,
        'MajorLinkerVersion': MajorLinkerVersion,
        'MajorImageVersion': MajorImageVersion,
        'MajorOperatingSystemVersion': MajorOperatingSystemVersion,
        'DllCharacteristics': DllCharacteristics,
        'SizeOfStackReserve': SizeOfStackReserve,
        'NumberOfSections': NumberOfSections,
        'ResourceSize': ResourceSize
    }
    return pd.DataFrame([data])

input_data = user_input_features()

# Affichage des donn√©es saisies
st.write("### Donn√©es saisies :")
st.write(input_data)

# Pr√©diction
if st.button('üîÆ Pr√©dire'):
    prediction = model.predict(input_data)
    prediction_proba = model.predict_proba(input_data)
    
    st.subheader('R√©sultat de la Pr√©diction')
    if prediction[0] == 1:
        st.success('‚úÖ Le fichier est **L√âGITIME**')
    else:
        st.error('‚ùå Le fichier est **MALVEILLANT**')

    st.subheader('Probabilit√©s de Pr√©diction')
    st.write(f'Probabilit√© Malveillant: {prediction_proba[0][0]:.2f}')
    st.write(f'Probabilit√© L√©gitime: {prediction_proba[0][1]:.2f}')
